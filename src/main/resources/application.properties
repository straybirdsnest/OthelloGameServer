# ===============================
# = Web
# ===============================
# hot swap 模板，便于网页调试
spring.thymeleaf.cache = false
spring.thymeleaf.mode = LEGACYHTML5

# Set BasePath for spring data rest
spring.data.rest.base-path = /api

# ===============================
# = JPA
# ===============================
# Hibernate ddl auto (create, create-drop, update, validate)
#spring.jpa.hibernate.ddl-auto=validate
# Hibernate 方言 (MySQL5Dialect, MySQL5InnoDBDialect)
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# ===============================
# = 数据库
# ===============================
# 数据库连接 URL
spring.datasource.url = jdbc:mysql://localhost:3306/othellogamedb
spring.datasource.username = othelloserver
spring.datasource.password = 8ae8e9f2af3b29f473d440306ad14faf
# 数据库驱动
spring.datasource.driverClassName=com.mysql.jdbc.Driver
# ===============================
# = 日志
# ===============================
# 本项目所有代码开启 DEBUG 级别的日志输出
logging.level.otakuplus.straybird.othellogameserver=DEBUG
# 显示执行的 SQL 语句
#logging.level.org.hibernate.SQL=DEBUG
# 显示每一条 SQL 语句绑定的数据值
#logging.level.org.hibernate.type.descriptor.sql=TRACE
# 需要深层追踪时开启 TRACE 级别
#logging.level.org.springframework.web=TRACE

# ===============================
# = socket.io 服务器配置
# ===============================
othellogameserver.socketio.host = localhost
othellogameserver.socketio.port = 8081

# ===============================
# = 上传文件的尺寸限制
# ===============================
#spring-boot默认为上传单文件最大1MB，请求最大为10MB
#multipart.maxFileSize: 16MB
#multipart.maxRequestSize: 16MB

# ===============================
# = jackson序列化特性开关
# ===============================
# 遇到空的bean不报错
#spring.jackson.serialization.fail-on-empty-beans = false